#! /usr/bin/env python3

import socket
from pathlib import Path
import subprocess
import sys

def get_ip_address() -> str:
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    try :
        s.connect(("8.8.8.8", 80))
        ip = s.getsockname()[0]
    except Exception:
        ip = "127.0.0.1"
    finally :
        s.close()
        return ip

def create_env_file(ip: str) -> None:
    print(f"local IP address: {ip}")
    frontend_env = Path("frontend/.env.local")
    frontend_env.touch()
    frontend_env.write_text(
        f"VITE_IP_ADDRESS=http://{ip}\n"
    )
    print("Successfully build frontend/.env.local file.")

    backend_env = Path("backend/.env.local")
    backend_env.touch()
    backend_env.write_text(
        f"http://{ip}\n"
    )
    print("Successfully build backend/.env.local file.")

def show_usage() -> None:
    print('Usage:')
    print('  ./setup            # Set IP address\n')
    print('  ./setup -b         # Set IP and run docker compose up --build')
    print('  ./setup build      # Same as the above\n')
    print('  ./setup -d         # Run docker compose down')
    print('  ./setup down       # Same as the above\n')
    print('  ./setup -h         # Show usage')
    print('  ./setup --help     # Same as the above\n')

if __name__ == "__main__":
    if len(sys.argv) == 1:
        create_env_file(get_ip_address())
    elif len(sys.argv) == 2:
        if sys.argv[1] == '-b' or sys.argv[1] == 'build':
            create_env_file(get_ip_address())
            subprocess.run("docker compose up --build", shell=True)
        elif sys.argv[1] == '-d' or sys.argv[1] == 'down':
            subprocess.run("docker compose down", shell=True)
        elif sys.argv[1] == '-h' or sys.argv[1] == '--help':
            show_usage()
        else :
            print('Error: Invalid argument.\n')
            show_usage()
            sys.exit(1)
    else :
        print('Error: Too many arguments.\n')
        show_usage()
        sys.exit(1)